# Docker Compose for development environment
version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/liaizen
      - DEBUG=true
      - LOG_LEVEL=DEBUG
    volumes:
      # Mount source code for hot reloading in development
      - ./app:/app/app
      - ./tests:/app/tests
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - liaizen-network

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: liaizen
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"  # Expose for external access in development
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d liaizen"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - liaizen-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - liaizen-network

  # Optional: Database administration tool
  adminer:
    image: adminer:4-standalone
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db
    networks:
      - liaizen-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  liaizen-network:
    driver: bridge
